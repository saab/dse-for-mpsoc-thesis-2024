/*
 * This Java source file was generated by the Gradle 'init' task.
 */

package platform;

import forsyde.io.core.SystemGraph;
import forsyde.io.core.ModelHandler;
import forsyde.io.lib.hierarchy.ForSyDeHierarchy;
import forsyde.io.visual.kgt.drivers.KGTDriver;

import platform.components.*;



public class App {

    private enum Platform {
        Zynq, MPSoC
    }

    private static final String APP_DIR = System.getProperty("user.home") + 
        "/Documents/degree-project/dse-for-mpsoc-thesis-2024/platform-model";
    private static final String ARTIFACTS_DST = 
        APP_DIR + "/app/src/main/java/platform/artifacts";
        
    private static final Platform PLATFORM = Platform.MPSoC;
    public static void main(String[] args) throws Exception {
		var sGraph = switch (PLATFORM) {
            case MPSoC -> MPSoCPlatformGraph();
            case Zynq -> ZynqPlatformGraph();
            default -> ToyPlatformGraph();
        };

        var handlerWithRegistrations = new ModelHandler()
                .registerTraitHierarchy(new ForSyDeHierarchy())
                .registerDriver(new KGTDriver());

        handlerWithRegistrations.writeModel(sGraph, 
            ARTIFACTS_DST + "/" + PLATFORM + ".fiodl"
        );
        handlerWithRegistrations.writeModel(sGraph, 
            ARTIFACTS_DST + "/" + PLATFORM + ".kgt"
        );
	}

	private static SystemGraph ToyPlatformGraph() throws Exception { 
		var handler = new ModelHandler();
		handler.registerTraitHierarchy(new ForSyDeHierarchy());
		var sGraph = handler.loadModel(
            APP_DIR + "/app/src/main/java/platform/toy_sdf_tiny.fiodl"
        );
        return sGraph;
	}

    private static SystemGraph MPSoCPlatformGraph() throws Exception {
        MPSoC mpsoc = new MPSoC();
        mpsoc.AddOCM();
        mpsoc.AddOCMSwitch();

        mpsoc.AddAPU();
        mpsoc.AddRPU();
        // mpsoc.addFPGA();

        return mpsoc.sGraph;
    }

	private static SystemGraph ZynqPlatformGraph() throws Exception {
		Zynq zynq = new Zynq();
        return zynq.sGraph;
    }
}